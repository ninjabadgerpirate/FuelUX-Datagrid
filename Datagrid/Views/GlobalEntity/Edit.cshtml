@model Datagrid.GlobalEntity


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.GlobalEntityID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstNames, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstNames, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstNames, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Surname, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreferredName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreferredName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PreferredName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GovID, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.GovID, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.GovID, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Gender, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LUCMaritalStatus, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.LUCMaritalStatus, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LUCMaritalStatus, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LUCEntityStatus, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.LUCEntityStatus, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LUCEntityStatus, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalaryPayDay, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalaryPayDay, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SalaryPayDay, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsLockedOut, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsLockedOut)
                    @Html.ValidationMessageFor(model => model.IsLockedOut, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LUCTitle, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.LUCTitle, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LUCTitle, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LUCEthnicity, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.LUCEthnicity, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LUCEthnicity, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
